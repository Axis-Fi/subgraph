// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AuctionRegistered extends ethereum.Event {
  get params(): AuctionRegistered__Params {
    return new AuctionRegistered__Params(this);
  }
}

export class AuctionRegistered__Params {
  _event: AuctionRegistered;

  constructor(event: AuctionRegistered) {
    this._event = event;
  }

  get auctionHouse(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get lotId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ipfsCID(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class CuratorRegistered extends ethereum.Event {
  get params(): CuratorRegistered__Params {
    return new CuratorRegistered__Params(this);
  }
}

export class CuratorRegistered__Params {
  _event: CuratorRegistered;

  constructor(event: CuratorRegistered) {
    this._event = event;
  }

  get curator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get xId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get ipfsCID(): string {
    return this._event.parameters[2].value.toString();
  }
}

export class CuratorRemoved extends ethereum.Event {
  get params(): CuratorRemoved__Params {
    return new CuratorRemoved__Params(this);
  }
}

export class CuratorRemoved__Params {
  _event: CuratorRemoved;

  constructor(event: CuratorRemoved) {
    this._event = event;
  }

  get xId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class CuratorUpdated extends ethereum.Event {
  get params(): CuratorUpdated__Params {
    return new CuratorUpdated__Params(this);
  }
}

export class CuratorUpdated__Params {
  _event: CuratorUpdated;

  constructor(event: CuratorUpdated) {
    this._event = event;
  }

  get xId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ipfsCID(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MetadataRegistry__getDigestInputPayload_Struct extends ethereum.Tuple {
  get curator(): Address {
    return this[0].toAddress();
  }

  get xId(): BigInt {
    return this[1].toBigInt();
  }

  get ipfsCID(): string {
    return this[2].toString();
  }
}

export class MetadataRegistry__isValidSignatureInputPayload_Struct extends ethereum.Tuple {
  get curator(): Address {
    return this[0].toAddress();
  }

  get xId(): BigInt {
    return this[1].toBigInt();
  }

  get ipfsCID(): string {
    return this[2].toString();
  }
}

export class MetadataRegistry extends ethereum.SmartContract {
  static bind(address: Address): MetadataRegistry {
    return new MetadataRegistry("MetadataRegistry", address);
  }

  DOMAIN_SEPARATOR(): Bytes {
    let result = super.call(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );

    return result[0].toBytes();
  }

  try_DOMAIN_SEPARATOR(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DOMAIN_SEPARATOR",
      "DOMAIN_SEPARATOR():(bytes32)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  auctionMetadata(auctionHouse: Address, lotId: BigInt): string {
    let result = super.call(
      "auctionMetadata",
      "auctionMetadata(address,uint96):(string)",
      [
        ethereum.Value.fromAddress(auctionHouse),
        ethereum.Value.fromUnsignedBigInt(lotId),
      ],
    );

    return result[0].toString();
  }

  try_auctionMetadata(
    auctionHouse: Address,
    lotId: BigInt,
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "auctionMetadata",
      "auctionMetadata(address,uint96):(string)",
      [
        ethereum.Value.fromAddress(auctionHouse),
        ethereum.Value.fromUnsignedBigInt(lotId),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  chainId(): BigInt {
    let result = super.call("chainId", "chainId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_chainId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("chainId", "chainId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  curatorId(curator: Address): BigInt {
    let result = super.call("curatorId", "curatorId(address):(uint256)", [
      ethereum.Value.fromAddress(curator),
    ]);

    return result[0].toBigInt();
  }

  try_curatorId(curator: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall("curatorId", "curatorId(address):(uint256)", [
      ethereum.Value.fromAddress(curator),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  curatorMetadata(xId: BigInt): string {
    let result = super.call(
      "curatorMetadata",
      "curatorMetadata(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(xId)],
    );

    return result[0].toString();
  }

  try_curatorMetadata(xId: BigInt): ethereum.CallResult<string> {
    let result = super.tryCall(
      "curatorMetadata",
      "curatorMetadata(uint256):(string)",
      [ethereum.Value.fromUnsignedBigInt(xId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getDigest(payload_: MetadataRegistry__getDigestInputPayload_Struct): Bytes {
    let result = super.call(
      "getDigest",
      "getDigest((address,uint256,string)):(bytes32)",
      [ethereum.Value.fromTuple(payload_)],
    );

    return result[0].toBytes();
  }

  try_getDigest(
    payload_: MetadataRegistry__getDigestInputPayload_Struct,
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getDigest",
      "getDigest((address,uint256,string)):(bytes32)",
      [ethereum.Value.fromTuple(payload_)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  isAuctionHouse(param0: Address): boolean {
    let result = super.call(
      "isAuctionHouse",
      "isAuctionHouse(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );

    return result[0].toBoolean();
  }

  try_isAuctionHouse(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isAuctionHouse",
      "isAuctionHouse(address):(bool)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  isValidSignature(
    signer_: Address,
    payload_: MetadataRegistry__isValidSignatureInputPayload_Struct,
    signature_: Bytes,
  ): boolean {
    let result = super.call(
      "isValidSignature",
      "isValidSignature(address,(address,uint256,string),bytes):(bool)",
      [
        ethereum.Value.fromAddress(signer_),
        ethereum.Value.fromTuple(payload_),
        ethereum.Value.fromBytes(signature_),
      ],
    );

    return result[0].toBoolean();
  }

  try_isValidSignature(
    signer_: Address,
    payload_: MetadataRegistry__isValidSignatureInputPayload_Struct,
    signature_: Bytes,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isValidSignature",
      "isValidSignature(address,(address,uint256,string),bytes):(bool)",
      [
        ethereum.Value.fromAddress(signer_),
        ethereum.Value.fromTuple(payload_),
        ethereum.Value.fromBytes(signature_),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  serviceSigner(): Address {
    let result = super.call("serviceSigner", "serviceSigner():(address)", []);

    return result[0].toAddress();
  }

  try_serviceSigner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "serviceSigner",
      "serviceSigner():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get serviceSigner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get auctionHouses_(): Array<Address> {
    return this._call.inputValues[1].value.toAddressArray();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddAuctionHouseCall extends ethereum.Call {
  get inputs(): AddAuctionHouseCall__Inputs {
    return new AddAuctionHouseCall__Inputs(this);
  }

  get outputs(): AddAuctionHouseCall__Outputs {
    return new AddAuctionHouseCall__Outputs(this);
  }
}

export class AddAuctionHouseCall__Inputs {
  _call: AddAuctionHouseCall;

  constructor(call: AddAuctionHouseCall) {
    this._call = call;
  }

  get auctionHouse_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class AddAuctionHouseCall__Outputs {
  _call: AddAuctionHouseCall;

  constructor(call: AddAuctionHouseCall) {
    this._call = call;
  }
}

export class AddCuratorAddressCall extends ethereum.Call {
  get inputs(): AddCuratorAddressCall__Inputs {
    return new AddCuratorAddressCall__Inputs(this);
  }

  get outputs(): AddCuratorAddressCall__Outputs {
    return new AddCuratorAddressCall__Outputs(this);
  }
}

export class AddCuratorAddressCall__Inputs {
  _call: AddCuratorAddressCall;

  constructor(call: AddCuratorAddressCall) {
    this._call = call;
  }

  get xId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get curator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class AddCuratorAddressCall__Outputs {
  _call: AddCuratorAddressCall;

  constructor(call: AddCuratorAddressCall) {
    this._call = call;
  }
}

export class RegisterAuctionCall extends ethereum.Call {
  get inputs(): RegisterAuctionCall__Inputs {
    return new RegisterAuctionCall__Inputs(this);
  }

  get outputs(): RegisterAuctionCall__Outputs {
    return new RegisterAuctionCall__Outputs(this);
  }
}

export class RegisterAuctionCall__Inputs {
  _call: RegisterAuctionCall;

  constructor(call: RegisterAuctionCall) {
    this._call = call;
  }

  get auctionHouse_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get lotId_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get ipfsCID_(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class RegisterAuctionCall__Outputs {
  _call: RegisterAuctionCall;

  constructor(call: RegisterAuctionCall) {
    this._call = call;
  }
}

export class RegisterCuratorCall extends ethereum.Call {
  get inputs(): RegisterCuratorCall__Inputs {
    return new RegisterCuratorCall__Inputs(this);
  }

  get outputs(): RegisterCuratorCall__Outputs {
    return new RegisterCuratorCall__Outputs(this);
  }
}

export class RegisterCuratorCall__Inputs {
  _call: RegisterCuratorCall;

  constructor(call: RegisterCuratorCall) {
    this._call = call;
  }

  get payload_(): RegisterCuratorCallPayload_Struct {
    return changetype<RegisterCuratorCallPayload_Struct>(
      this._call.inputValues[0].value.toTuple(),
    );
  }

  get signature_(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class RegisterCuratorCall__Outputs {
  _call: RegisterCuratorCall;

  constructor(call: RegisterCuratorCall) {
    this._call = call;
  }
}

export class RegisterCuratorCallPayload_Struct extends ethereum.Tuple {
  get curator(): Address {
    return this[0].toAddress();
  }

  get xId(): BigInt {
    return this[1].toBigInt();
  }

  get ipfsCID(): string {
    return this[2].toString();
  }
}

export class RemoveAuctionHouseCall extends ethereum.Call {
  get inputs(): RemoveAuctionHouseCall__Inputs {
    return new RemoveAuctionHouseCall__Inputs(this);
  }

  get outputs(): RemoveAuctionHouseCall__Outputs {
    return new RemoveAuctionHouseCall__Outputs(this);
  }
}

export class RemoveAuctionHouseCall__Inputs {
  _call: RemoveAuctionHouseCall;

  constructor(call: RemoveAuctionHouseCall) {
    this._call = call;
  }

  get auctionHouse_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class RemoveAuctionHouseCall__Outputs {
  _call: RemoveAuctionHouseCall;

  constructor(call: RemoveAuctionHouseCall) {
    this._call = call;
  }
}

export class RemoveCuratorCall extends ethereum.Call {
  get inputs(): RemoveCuratorCall__Inputs {
    return new RemoveCuratorCall__Inputs(this);
  }

  get outputs(): RemoveCuratorCall__Outputs {
    return new RemoveCuratorCall__Outputs(this);
  }
}

export class RemoveCuratorCall__Inputs {
  _call: RemoveCuratorCall;

  constructor(call: RemoveCuratorCall) {
    this._call = call;
  }

  get xId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class RemoveCuratorCall__Outputs {
  _call: RemoveCuratorCall;

  constructor(call: RemoveCuratorCall) {
    this._call = call;
  }
}

export class RemoveCuratorAddressCall extends ethereum.Call {
  get inputs(): RemoveCuratorAddressCall__Inputs {
    return new RemoveCuratorAddressCall__Inputs(this);
  }

  get outputs(): RemoveCuratorAddressCall__Outputs {
    return new RemoveCuratorAddressCall__Outputs(this);
  }
}

export class RemoveCuratorAddressCall__Inputs {
  _call: RemoveCuratorAddressCall;

  constructor(call: RemoveCuratorAddressCall) {
    this._call = call;
  }

  get xId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get curator_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RemoveCuratorAddressCall__Outputs {
  _call: RemoveCuratorAddressCall;

  constructor(call: RemoveCuratorAddressCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UpdateCuratorCall extends ethereum.Call {
  get inputs(): UpdateCuratorCall__Inputs {
    return new UpdateCuratorCall__Inputs(this);
  }

  get outputs(): UpdateCuratorCall__Outputs {
    return new UpdateCuratorCall__Outputs(this);
  }
}

export class UpdateCuratorCall__Inputs {
  _call: UpdateCuratorCall;

  constructor(call: UpdateCuratorCall) {
    this._call = call;
  }

  get xId_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get ipfsCID_(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class UpdateCuratorCall__Outputs {
  _call: UpdateCuratorCall;

  constructor(call: UpdateCuratorCall) {
    this._call = call;
  }
}

export class UpdateDomainSeparatorCall extends ethereum.Call {
  get inputs(): UpdateDomainSeparatorCall__Inputs {
    return new UpdateDomainSeparatorCall__Inputs(this);
  }

  get outputs(): UpdateDomainSeparatorCall__Outputs {
    return new UpdateDomainSeparatorCall__Outputs(this);
  }
}

export class UpdateDomainSeparatorCall__Inputs {
  _call: UpdateDomainSeparatorCall;

  constructor(call: UpdateDomainSeparatorCall) {
    this._call = call;
  }
}

export class UpdateDomainSeparatorCall__Outputs {
  _call: UpdateDomainSeparatorCall;

  constructor(call: UpdateDomainSeparatorCall) {
    this._call = call;
  }
}

export class UpdateServiceSignerCall extends ethereum.Call {
  get inputs(): UpdateServiceSignerCall__Inputs {
    return new UpdateServiceSignerCall__Inputs(this);
  }

  get outputs(): UpdateServiceSignerCall__Outputs {
    return new UpdateServiceSignerCall__Outputs(this);
  }
}

export class UpdateServiceSignerCall__Inputs {
  _call: UpdateServiceSignerCall;

  constructor(call: UpdateServiceSignerCall) {
    this._call = call;
  }

  get serviceSigner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UpdateServiceSignerCall__Outputs {
  _call: UpdateServiceSignerCall;

  constructor(call: UpdateServiceSignerCall) {
    this._call = call;
  }
}
