type AuctionLotSnapshot @entity(immutable: true) {
  id: Bytes! # transaction hash + log index
  lot: AuctionCreated!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  # Lot details
  capacity: BigDecimal! # uint256
  sold: BigDecimal! # uint256
  purchased: BigDecimal! # uint256
}

type AuctionCancelled @entity(immutable: true) {
  id: Bytes!
  lot: AuctionCreated!
  auctionRef: Bytes! # bytes7
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AuctionCreated @entity(immutable: true) {
  id: String! # uint96
  lotId: BigInt! # uint96
  auctionRef: Bytes! # bytes7
  baseToken: Token! # address
  quoteToken: Token! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
  owner: Bytes! # address
  curator: Bytes! # address
  derivativeRef: Bytes! # bytes7
  wrapDerivative: Boolean!
  chain: String!

  # Auction details
  start: BigInt! # timestamp
  conclusion: BigInt! # timestamp
  capacityInQuote: Boolean!
  capacity: BigDecimal!

  # Reverse lookups
  cancelled: [AuctionCancelled!]! @derivedFrom(field: "lot")
  bids: [Bid!]! @derivedFrom(field: "lot")
  cancelledBids: [CancelBid!]! @derivedFrom(field: "lot")
  purchases: [Purchase!]! @derivedFrom(field: "lot")
  settle: [Settle!]! @derivedFrom(field: "lot")
  curated: [Curated!]! @derivedFrom(field: "lot")
  snapshots: [AuctionLotSnapshot!]! @derivedFrom(field: "lot")
}

type Bid @entity(immutable: true) {
  id: String!
  lot: AuctionCreated!
  bidId: BigInt! # uint96
  bidder: Bytes! # address
  amount: BigDecimal! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!

  # Reverse lookups
  cancelledBids: [CancelBid!]! @derivedFrom(field: "bid")
}

type CancelBid @entity(immutable: true) {
  id: Bytes!
  lot: AuctionCreated!
  bid: Bid!
  bidder: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Curated @entity(immutable: true) {
  id: Bytes!
  lot: AuctionCreated!
  curator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleInstalled @entity(immutable: true) {
  id: Bytes!
  keycode: Bytes! # bytes5
  version: Int! # uint8
  address: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ModuleSunset @entity(immutable: true) {
  id: Bytes!
  keycode: Bytes! # bytes5
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  caller: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Purchase @entity(immutable: true) {
  id: Bytes!
  lot: AuctionCreated!
  buyer: Bytes! # address
  referrer: Bytes! # address
  amount: BigDecimal! # uint256
  payout: BigDecimal! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Settle @entity(immutable: true) {
  id: Bytes!
  lot: AuctionCreated!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Token @entity(immutable: true) {
  id: Bytes!
  address: Bytes!
  name: String!
  symbol: String!
  decimals: Int!
}

type BidDecrypted @entity(immutable: true) {
  id: Bytes!
  lotId: BigInt! # uint96
  bidId: BigInt! # uint96
  amountIn: BigDecimal!
  amountOut: BigDecimal!
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
